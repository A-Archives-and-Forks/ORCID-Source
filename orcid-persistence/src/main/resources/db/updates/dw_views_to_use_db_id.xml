<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="CREATE-DW-ORG-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_org"/>
        <createView viewName="dw_org" replaceIfExists="true">
            select id as db_id, name, city, region, country, url, org_disambiguated_id,
            date_created::timestamp, last_modified::timestamp
            from org
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-ORG" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_org to dw_user;</sql>
    </changeSet>
    
    <changeSet id="CREATE-DW-EMAIL-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_email"/>
        <createView viewName="dw_email" replaceIfExists="true">
            select substring(email from '@(.*)$') as email, orcid, is_primary, is_verified, visibility,
            date_created::timestamp, last_modified::timestamp
            from email
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-EMAIL-VIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_email to dw_user;</sql>
    </changeSet>
    
    <changeSet id="ALTER-DW-GIVEN-PERMISSONS-TO-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_given_permission_to"/>
        <createView viewName="dw_given_permission_to" replaceIfExists="true">
            select given_permission_to_id, receiver_orcid, giver_orcid, approval_date::timestamp, date_created::timestamp, last_modified::timestamp 
            from given_permission_to
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-TO-DW-USER-ON-DW-GIVEN-PERMISSONS-TO" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_given_permission_to to dw_user;</sql>
    </changeSet>

    <changeSet id="ALTER-DW-ORG-AFFILIATION-RELATION-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_org_affiliation_relation"/>
        <createView viewName="dw_org_affiliation_relation" replaceIfExists="true">
            select id as db_id, org_id, orcid, org_affiliation_relation_role, org_affiliation_relation_title,
            department, start_day, start_month, start_year, end_day, end_month, end_year, visibility,
            case when orcid = source_id then true else false end as self_asserted, client_source_id, url, external_ids_json,
            date_created::timestamp, last_modified::timestamp
            from org_affiliation_relation
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-ORG-AFF" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_org_affiliation_relation to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-ORG-DISAMBIGUATED" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_org_disambiguated"/>
        <createView viewName="dw_org_disambiguated" replaceIfExists="true">
            select id as db_id, source_id, source_url, source_type, org_type, name,
            city, region, country, url, status, date_created::timestamp, last_modified::timestamp, popularity
            from org_disambiguated
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-ORG-DISAMBIGUATED" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_org_disambiguated to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-ORG-DISAM-EXTERNAL-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_org_disambiguated_external_identifier"/>
        <createView viewName="dw_org_disambiguated_external_identifier" replaceIfExists="true">
            select id as db_id, org_disambiguated_id, identifier, identifier_type, preferred,
            date_created::timestamp, last_modified::timestamp
            from org_disambiguated_external_identifier
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-EXTDISAM-ID-VIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_org_disambiguated_external_identifier to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-PEER-REVIEW-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_peer_review"/>
        <createView viewName="dw_peer_review" replaceIfExists="true">
            select id as db_id, orcid, peer_review_subject_id, external_identifiers_json, org_id,
            peer_review_role, peer_review_type, completion_day, completion_month, completion_year,
            url, visibility, subject_external_identifiers_json, subject_type, subject_container_name,
            subject_name, subject_url, group_id, client_source_id,
            date_created::timestamp, last_modified::timestamp
            from peer_review
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-PEER-REVIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_peer_review to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-PROFILE-FUNDING-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_profile_funding"/>
        <createView viewName="dw_profile_funding" replaceIfExists="true">
            select id as db_id, orcid, org_id, title, type, currency_code, numeric_amount, description, start_day, start_month,
            start_year, end_day, end_month, end_year, url, contributors_json, organization_defined_type,
            external_identifiers_json, visibility, case when orcid = source_id then true else false end as self_asserted, client_source_id,
            date_created::timestamp, last_modified::timestamp
            from profile_funding
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-PROFILE-FUNDING" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_profile_funding to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-RESEARCH-RESOURCE-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_research_resource"/>
        <createView viewName="dw_research_resource" replaceIfExists="true">
            select id as db_id, orcid, proposal_type, external_identifiers_json, title, url, start_day,
            start_month, start_year, end_day, end_month, end_year, visibility, client_source_id,
            date_created, last_modified
            from research_resource
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-RESEARCH-RESOURCE" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_research_resource to dw_user;</sql>
    </changeSet>

    <changeSet id="ALTER-DW-RESEARCH-RESOURCE-ITEM-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_research_resource_item"/>
        <createView viewName="dw_research_resource_item" replaceIfExists="true">
            select a.id as db_id, a.research_resource_id, a.resource_name, a.resource_type, a.external_identifiers_json, 
            a.url, b.date_created::timestamp, b.last_modified::timestamp
            from research_resource_item a 
            inner join research_resource b on a.research_resource_id =b.id
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-RESEARCH-RESOURCE-ITEM" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_research_resource_item to dw_user;</sql>
    </changeSet>
    
    <changeSet id="ALTER-DW-PROFILE-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_profile"/>
        <createView viewName="dw_profile" replaceIfExists="true">
            select orcid, orcid_type, record_locked, group_type, salesforce_id, date_created, last_modified, profile_deactivation_date,
            enable_developer_tools, last_login, using_2fa
            from profile
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-PROFILE" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_profile to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-ADDRESS-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_address"/>
        <createView viewName="dw_address" replaceIfExists="true">
            select id as db_id, orcid, iso2_country, visibility, case when orcid = source_id then true else false end as self_asserted, client_source_id,
            date_created, last_modified
            from address
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-ADDRESS" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_address to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-BIOGRAPHY-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_biography"/>
        <createView viewName="dw_biography" replaceIfExists="true">
            select id as db_id, orcid, biography, visibility,
            date_created::timestamp, last_modified::timestamp
            from biography
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-BIOGRAPHY" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_biography to dw_user;</sql>
    </changeSet>

    <changeSet id="CREATE-DW-EXTERNAL-IDENTIFIER-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_external_identifier"/>
        <createView viewName="dw_external_identifier" replaceIfExists="true">
            select id as db_id, orcid, external_id_reference, external_id_type, external_id_url, visibility, case when orcid = source_id then true else false end as self_asserted, client_source_id,
            date_created, last_modified
            from external_identifier
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-EXT-ID-VIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_external_identifier to dw_user;</sql>
    </changeSet>

    <changeSet id="ALTER-DW-PROFILE_KEYWORD-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_profile_keyword"/>
        <createView viewName="dw_profile_keyword" replaceIfExists="true">
            select id as db_id, profile_orcid, trim(kwc) as keyword, visibility, case when profile_orcid = source_id then true else false end as self_asserted, client_source_id,
            date_created, last_modified
            from profile_keyword, regexp_split_to_table(keywords_name, '[,;\.]') kwc
        </createView>
    </changeSet>
    
    <changeSet id="GRANT-READ-PERMISSIONS-TO-PROFILE_KEYWORD-VIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_profile_keyword to dw_user;</sql>
     </changeSet>

    <changeSet id="CREATE-DW-RECORD-NAME-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_record_name"/>
        <createView viewName="dw_record_name" replaceIfExists="true">
            select id as db_id, orcid, credit_name, family_name, given_names, visibility,
            date_created::timestamp, last_modified::timestamp
            from record_name
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-RECORD-NAME" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_record_name to dw_user;</sql>
    </changeSet>

    <changeSet id="POSTGRES-CREATE-DW-RESEARCHER-URL-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_researcher_url"/>
        <createView viewName="dw_researcher_url" replaceIfExists="true">
            select id as db_id, orcid, substring(url from '[http[s]*://]?([^/]+)') as domain, url_name, visibility,case when orcid = source_id then true else false end as self_asserted, client_source_id,
            date_created, last_modified
            from researcher_url
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-RESEARCHER-URL" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_researcher_url to dw_user;</sql>
    </changeSet>
    

   <changeSet id="CREATE-DW-OAUTH2-TOKEN-DETAIL-VIEW" author="Camelia Dumitru" dbms="postgresql">
	    <dropView 
            schemaName="public"
            viewName="dw_oauth2_token_detail"/>
        <createView viewName="dw_oauth2_token_detail">
            select id as db_id, token_type, user_orcid, client_details_id, substring(redirect_uri from  '.*://([^/]*)') as redirect_uri, scope_type, obo_client_details_id,
            token_expiration, revocation_date, date_created, last_modified
            from oauth2_token_detail
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-TO-DW-USER-ON-DW-OAUTH2-TOKEN-DETAIL" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_oauth2_token_detail to dw_user;</sql>
    </changeSet>
    
   <changeSet id="CREATE-DW-GROUP-ID-RECORD-VIEW" author="Camelia Dumitru" dbms="postgresql">
	   <dropView 
            schemaName="public"
            viewName="dw_group_id_record"/>
        <createView viewName="dw_group_id_record" replaceIfExists="true">
            select id as db_id, group_id, group_name, group_type, client_source_id, date_created::timestamp, last_modified::timestamp
            from group_id_record
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-TO-DW-USER-ON-DW-GROUP-ID-RECORD" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_group_id_record to dw_user;</sql>
    </changeSet>

   <changeSet id="CREATE-DW-IDENTIFIER-TYPE-VIEW" author="Camelia Dumitru"  dbms="postgresql">
	   <dropView 
            schemaName="public"
            viewName="dw_identifier_type"/>
        <createView viewName="dw_identifier_type" replaceIfExists="true">
            select id as db_id, id_name, id_validation_regex, id_resolution_prefix, id_deprecated, primary_use,
            case_sensitive, date_created::timestamp, last_modified::timestamp
            from identifier_type
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-TO-DW-USER-ON-DW-IDENTIFIER-TYPE" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_identifier_type to dw_user;</sql>
    </changeSet>    
    
   <changeSet id="CREATE-DW-IDENTITY-PROVIDER-VIEW" author="Camelia Dumitru" dbms="postgresql">
	    <dropView 
            schemaName="public"
            viewName="dw_identity_provider"/>
        <createView viewName="dw_identity_provider" replaceIfExists="true">
            select id as db_id, providerid, display_name, last_failed::timestamp, failed_count, date_created::timestamp, last_modified::timestamp
            from identity_provider
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-TO-DW-USER-ON-DW-IDENTITY-PROVIDER" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_identity_provider to dw_user;</sql>
    </changeSet>
    
    <changeSet id="CREATE-DW-PROFILE_HISTORY-EVENT-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_profile_history_event"/>
        <createView viewName="dw_profile_history_event" replaceIfExists="true">
            select id as db_id, orcid, event_type, date_created::timestamp, last_modified::timestamp
            from profile_history_event
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-TO-DW-PROFILE_HISTORY-EVENT-VIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_profile_history_event to dw_user;</sql>
    </changeSet>

        <changeSet id="ALTER-DW-RESEARCH-RESOURCE-ORG-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_research_resource_org"/>
        <createView viewName="dw_research_resource_org" replaceIfExists="true">
            select a.research_resource_id, a.org_id, b.date_created::timestamp, b.last_modified::timestamp
            from research_resource_org a 
            inner join research_resource b on a.research_resource_id =b.id
        </createView>
    </changeSet>
    
    <changeSet id="GRANT-READ_PERM-TO-RESEARCH-RESOURCE-ORG-VIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_research_resource_org to dw_user;</sql>
    </changeSet>
    
    <changeSet id="CREATE-DW-USERCONNECTION-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_userconnection"/>
        <createView viewName="dw_userconnection" replaceIfExists="true">
            select orcid, providerid, is_linked,last_login, id_type, date_created::timestamp, last_modified::timestamp
            from userconnection where TRIM(BOTH FROM orcid) &lt;&gt;''
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-TO-DW-USERCONNECTION-VIEW" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_userconnection to dw_user;</sql>
    </changeSet>
    
    <changeSet id="REMOVE_CONTRIBUTORSJSON_FROM-DW-WORK-VIEW" author="Camelia Dumitru" dbms="postgresql">
		<dropView 
            schemaName="public"
            viewName="dw_work"/>
        <createView viewName="dw_work" replaceIfExists="true">
            select work_id, orcid, publication_day, publication_month, publication_year, title, subtitle, description,
            work_url, citation, citation_type, work_type, journal_title, language_code, translated_title,
            translated_title_language_code, iso2_country, visibility, case when orcid = source_id then true else false end as self_asserted , client_source_id,
            date_created::timestamp, last_modified::timestamp
            from work
        </createView>
    </changeSet>

    <changeSet id="GRANT-READ-PERMISSIONS-TO-DW-USER-ON-DW-WORK" author="Camelia Dumitru" dbms="postgresql">
        <preConditions>
            <sqlCheck expectedResult="1">SELECT 1 FROM pg_roles WHERE rolname='dw_user'</sqlCheck>
        </preConditions>
        <sql>GRANT SELECT ON TABLE dw_work to dw_user;</sql>
    </changeSet>
</databaseChangeLog>