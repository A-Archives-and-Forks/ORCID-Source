services:
  dependencies:
    image: orcid/registry-dependencies:${TAG:-0.0.1}
    entrypoint: sleep infinity
    build:
      context: .
      args:
        tag_numeric: ${TAG:-0.0.1}
    profiles:
      - build
    networks:
      custom_network:
        ipv4_address: 10.20.0.2
    extra_hosts:
      - "dependencies:10.20.0.2"
      - "redis:10.20.0.3"
      - "postgres:10.20.0.4"
      - "haprouter:10.20.0.5"

  redis:
    image: orcid/registry/redis:7.2.5-alpine
    ports:
      - '6379:6379'
    build:
      context: .
      dockerfile: redis/Dockerfile
    profiles:
      - db
      - dev
    networks:
      custom_network:
        ipv4_address: 10.20.0.3
    extra_hosts:
      - "dependencies:10.20.0.2"
      - "redis:10.20.0.3"
      - "postgres:10.20.0.4"
      - "haprouter:10.20.0.5"

  postgres:
    image: postgres:13.13-alpine3.19
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    profiles:
      - db
      - dev
    networks:
      custom_network:
        ipv4_address: 10.20.0.4
    extra_hosts:
      - "dependencies:10.20.0.2"
      - "redis:10.20.0.3"
      - "postgres:10.20.0.4"
      - "haprouter:10.20.0.5"

  haprouter:
    image: ${DOCKER_REG_PRIVATE}/orcid/registry/orcid-haprouter:${TAG:-0.0.1}
    build:
      context: .
      dockerfile: orcid-haprouter/Dockerfile
    extra_hosts:
      - "nowhere:127.0.0.1"
      - "dependencies:10.20.0.2"
      - "redis:10.20.0.3"
      - "postgres:10.20.0.4"
      - "haprouter:10.20.0.5"
    environment:
      POSTGRES_READ_FQDN_A: postgres
      POSTGRES_READ_FQDN_B: nowhere
      POSTGRES_READ_FQDN_C: nowhere
      POSTGRES_WRITE_FQDN_A: postgres
      POSTGRES_WRITE_FQDN_B: nowhere
      POSTGRES_WRITE_FQDN_C: nowhere
      SOLR_READ_FQDN_A: solr
      SOLR_READ_FQDN_B: nowhere
      SOLR_READ_FQDN_C: nowhere
      SOLR_WRITE_FQDN_A: solr
      SOLR_WRITE_FQDN_B: nowhere.local
      SOLR_WRITE_FQDN_C: nowhere.local
    ports:
      - 0.0.0.0:8888:1936 # stats
      - 0.0.0.0:7432:7432 # solr read
      - 0.0.0.0:7983:7983 # solr write
      - 0.0.0.0:7432:7432 # postgres read
      - 0.0.0.0:6432:6432 # postgres write
    networks:
      custom_network:
        ipv4_address: 10.20.0.5
    profiles:
      - dev

  lb:
    image: ${DOCKER_REG_PRIVATE}/orcid/registry/orcid-lb:${TAG:-0.0.1}
    build:
      context: .
      dockerfile: orcid-lb/Dockerfile
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    profiles:
      - dev

  frontend:
    image: ${DOCKER_REG_PRIVATE}/orcid/registry/orcid-web-frontend-${FRONTEND_LABEL:-qa}:${FRONTEND_TAG:-0.0.1}
    build:
      context: .
      dockerfile: 'FIXME: must build in the orcid-angular project first Dockerfile.build'
    ports:
      - 0.0.0.0:13106:80
    profiles:
      - dev
      - ui

  web_proxy:
    image: ${DOCKER_REG_PRIVATE}/orcid/registry/orcid-web-proxy:${TAG:-0.0.1}
    build:
      context: .
      dockerfile: orcid-web-proxy/Dockerfile
    ports:
      - 0.0.0.0:13107:80
      - 0.0.0.0:13108:443
    volumes:
      - ./certs/dhparam.pem:/etc/nginx/certs/dhparam.pem:ro
      - ${SSL_CERTIFICATE:-./certs/docker_dev.pem}:/etc/nginx/certs/docker.pem:ro
      - ${SSL_CERTIFICATE_KEY:-./certs/docker_dev-key.pem}:/etc/nginx/certs/docker-key.pem:ro
    profiles:
      - dev
      - ui

  web:
    image: ${DOCKER_REG_PRIVATE}/orcid/registry/orcid-web:${TAG:-0.0.1}
    build:
      cache_from:
        - orcid/registry-dependencies:${TAG:-0.0.1}
      context: .
      dockerfile: orcid-web/Dockerfile
      args:
        tag_numeric: ${TAG:-0.0.1}
    env_file:
      - default.env
      - properties/default.orcid_core.env
      - properties/default.misc.env
      - properties/default.frontend.env
      - properties/default.persistence.env
      - orcid-web/default.env
      - orcid-web/deployment.env
      - ${DOCKER_DEV_ENV_FILE:-empty.env}
    ports:
      - 0.0.0.0:13100:8080
    profiles:
      - dev
      - ui

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.20.0.0/16

volumes:
  postgres_data:
